{"version":3,"sources":["IPhone_X_vector.svg","Components/WidgetPage/data/book.svg","Components/WidgetPage/data/film.svg","Components/WidgetPage/data/investments.svg","Components/WidgetPage/data/cashback.svg","Components/WidgetPage/Widget/index.js","Components/WidgetPage/index.js","Components/SaveMoneyPage/index.js","Components/Page404/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Widget","props","state","this","disabled","window","location","assign","link","className","onClick","changePage","src","image","alt","text","React","Component","WidgetPage","icon","color","transform","pull","invest_image","film_image","book_image","cash_image","faQuestionCircle","SaveMoneyPage","Page404","library","add","faMicrophone","faSearch","faCircle","App","console","log","hostname","phone","exact","path","Boolean","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f67e1d44.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/IPhone_X_vector.5afa0f31.svg\";","module.exports = __webpack_public_path__ + \"static/media/book.87193c52.svg\";","module.exports = __webpack_public_path__ + \"static/media/film.30c6649c.svg\";","module.exports = __webpack_public_path__ + \"static/media/investments.01fa98f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/cashback.4f83adfc.svg\";","import React from 'react';\nimport './style.css'\n\n\n\nexport default class Widget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n        };\n    }\n\n    componentDidMount() {\n\n    }\n    changePage(){\n        if (!this.props.disabled){\n            window.location.assign(this.props.link);\n        }\n    }\n\n    render() {\n        return (\n            <div className={this.props.disabled? \"widget-holder + widget-disabled\":\"widget-holder\"} onClick={()=>{this.changePage();}}>\n                <img className=\"widget\" src={this.props.image} alt={this.props.text}/>\n                <p className=\"widget\">{this.props.text}</p>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './style.css'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faQuestionCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport Widget from \"./Widget\";\nimport book_image from \"./data/book.svg\";\nimport film_image from \"./data/film.svg\";\nimport invest_image from \"./data/investments.svg\";\nimport cash_image from \"./data/cashback.svg\";\n\n\n// import film_img from \".data/film.svg\"\n\n\n\nexport default class WidgetPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n        };\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <div>\n                <p className=\"region\">Москва</p>\n                <h1 className=\"services\">Советы\n                    <span className=\"fa-layers fa-fw fa-pull-right voice-widget fa-lg\">\n                            <FontAwesomeIcon icon=\"circle\" color=\"#4a2cf0\" />\n                            <FontAwesomeIcon color=\"#ffffff\" icon=\"microphone\" transform=\"shrink-6\"/>\n                        </span>\n                </h1>\n                <div className=\"search-bar\"><FontAwesomeIcon pull=\"left\" color=\"#7f7e84\" icon=\"search\" /> Поиск</div>\n                <div className=\"widget-container\">\n                    <Widget link={\"/save_money\"} image={invest_image}  text={\"Как копить\"}/>\n                    <Widget link={\"/movies\"} image={film_image}  text={\"Что смотреть\"}/>\n                    <Widget link={\"/books\"} image={book_image}  disabled={true} text={\"Что читать\"}/>\n                    <Widget link={\"/articles\"} image={cash_image} disabled={true} text={\"Статьи\"}/>\n                </div>\n                <h3 className=\"help\"><FontAwesomeIcon icon={faQuestionCircle} color=\"#4a2cf0\"/> Выберете доступный совет</h3>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './style.css'\n\n\n\nexport default class SaveMoneyPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n        };\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={\"page-caption\"}>Как копить</h1>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './style.css'\n\n\n\nexport default class Page404 extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n        };\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={\"page-caption\"}>Страница не найдена</h1>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './App.css'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\n\nimport phone from \"./IPhone_X_vector.svg\"\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {\n    faCircle,\n    faMicrophone,\n    faQuestionCircle,\n    faSearch\n} from '@fortawesome/free-solid-svg-icons'\n\n\nimport WidgetPage from \"./Components/WidgetPage\";\nimport SaveMoneyPage from \"./Components/SaveMoneyPage\";\nimport Page404 from \"./Components/Page404\";\n\n\nlibrary.add(faMicrophone, faSearch, faCircle, faQuestionCircle)\n\n// const categories = ['Кино', 'Рестораны', 'Концерты', 'Путешествия', 'Топливо', 'Товары', 'Спорт', 'Страхование', 'Театр'];\n// <ServiceList categories={categories}></ServiceList>\n\n\nexport default class App extends React.Component {\n    componentDidMount() {\n        console.log(\"Page hostname is \" + window.location.hostname);\n    }\n\n    render() {\n        return(\n            <div className=\"wrapper\">\n                <div className=\"sub-wrapper\">\n                    <img src={phone} className={\"image-back\"} alt={\"mobile\"}/>\n                    <div className=\"phone-wrapper\">\n                        <Router>\n                            <Switch>\n                                <Route exact path=\"/\">\n                                    <WidgetPage/>\n                                </Route>\n                                <Route exact path={\"/save_money\"}>\n                                    <SaveMoneyPage/>\n                                </Route>\n                                <Route exact path={\"/movies\"}>\n                                    {/*insert here*/}\n                                </Route>\n                                <Route exact path={\"/books\"}>\n\n                                </Route>\n                                <Route exact path={\"/articles\"}>\n\n                                </Route>\n                                <Route exact path={\"*\"}>\n                                    <Page404/>\n                                </Route>\n                                {/*more routers here + TODO 404 page*/}\n                            </Switch>\n                        </Router>\n                    </div>\n                </div>\n            </div>\n        )    }\n\n}\n\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}